# Contains all available variables. Only use this if you want to fully customize the deployment.

# ------- General -------
tenant_id           = "YOUR_TENANTID"
subscription_id     = "YOUR_SUBSCRIPTIONID"
resource_group_name = "rg-MyWorkID"
resource_location   = "westeurope"

# ------- Flags -------

# Skip actions that require global admin permissions. If set to true you will have to set some settings, like the permission grants, manually. 
# NOTE: If this ever was set to false a change to true will result in the previously set permissions being removed
skip_actions_requiring_global_admin = false

# Value to determine if the backend access groups should be created automatically or if this action should be skipped
skip_creation_backend_access_groups = false

# Decides wether the backend should be updated automatically. If set to false the backend will not be updated automatically. If set to true the backend will be updated automatically. 
# NOTE: If this ever was set to false a change to true will result in the backend being recreated automatically
enable_auto_update = true

# Allow credential operations for privileged users. If set to true, users with privileged roles (e.g. Global Admin or User Admin) can perform credential operations like create TAP and reset password
allow_credential_operations_for_privileged_users = false

# ------- AppService -------

# Name of the AppService that hosts the api. Note this has to be globally unique.
api_name = "REPLACE_WITH_UNIQUE_APPSERVICE_NAME"

# List of custom domains for MyWorkID. Must be configured at a later time. 
# NOTE: If specified the VerifiedId callbacks will always use the first domain in the list.
custom_domains = ["REPLACE_WITH_CUSTOM_DOMAIN"]

# ------- AppRegistrations -------

# Name of the AppRegistration that is used by the backend
backed_appreg_name = "ar-MyWorkID-backend"

# Name of the AppRegistration that is used by the frontend
frontend_appreg_name = "ar-MyWorkID-frontend"

# ------- AuthContexts -------

# AuthContext Id configured that is challenged for the dismissUser action
dismiss_user_risk_auth_context_id = "REPLACE_WITH_AUTHCONTEXT"

# AuthContext Id configured that is challenged for the generateTAP action
generate_tap_auth_context_id = "REPLACE_WITH_AUTHCONTEXT"

# AuthContext Id configured that is challenged for the resetPassword action
reset_password_auth_context_id = "REPLACE_WITH_AUTHCONTEXT"

# ------- VerifiedId -------

# KeyVault secret name for the signing key of the jwt used int the verifiedId callbacks
verified_id_jwt_signing_key_secret_name = "VerifiedId-JwtSigningKey"

# KeyVault secret name for the Decentralized identifier of the tenant (https://learn.microsoft.com/en-us/entra/verified-id/verifiable-credentials-configure-verifier#gather-tenant-details-to-set-up-your-sample-application)
verified_id_decentralized_identifier_secret_name = "VerifiedId-DecentralizedIdentifier"

# The name of the custom security attribute set where the last verified date should be stored.
verified_id_verify_security_attribute_set = "MyWorkID"

# The name of the custom security attribute where the last verified date should be stored.
verified_id_verify_security_attribute = "lastVerifiedFaceCheck"

# ------- Backend Access Groups -------

# Values for the backend access group names. 
# Only relevant if skip_creation_backend_access_groups = false
backend_access_group_names = {
  create_tap        = "sec - MyWorkID - Create TAP"
  dismiss_user_risk = "sec - MyWorkID - Dismiss User Risk"
  password_reset    = "sec - MyWorkID - Password Reset"
  validate_identity = "sec - MyWorkID - Validate Identity"
}
